diff --git defs.h defs.h
index 1a4c730..7398200 100644
--- defs.h
+++ defs.h
@@ -177,6 +177,8 @@ struct number_option {
 /*
  *  program_context flags
  */
+#define VOLATILE_FLAG    (0x1)
+#define IS_VOLATILE()    (pc->volflags & VOLATILE_FLAG)
 #define LIVE_SYSTEM                 (0x1ULL)
 #define TTY                         (0x2ULL)
 #define RUNTIME                     (0x4ULL)
@@ -382,6 +384,7 @@ struct program_context {
 	char *gdb_version;              /* embedded gdb version */
 	char *prompt;                   /* this program's prompt */
 	unsigned long long flags;       /* flags from above */
+	unsigned long volflags;         /* volatile flags */
 	char *namelist;         	/* linux namelist */
 	char *dumpfile;         	/* dumpfile or /dev/kmem */ 
 	char *live_memsrc;              /* live memory driver */
diff --git filesys.c filesys.c
index 73449a1..c3fe9c7 100644
--- filesys.c
+++ filesys.c
@@ -194,6 +194,13 @@ memory_source_init(void)
 			if (!proc_kcore_init(fp))
 				error(FATAL, 
 				    "/proc/kcore: initialization failed\n");
+		} else if(IS_VOLATILE()) {
+			if ((pc->mfd = open(pc->live_memsrc, O_RDWR)) < 0) {
+				if ((pc->mfd = open(pc->live_memsrc, O_RDONLY)) < 0)
+					error(FATAL, "%s: %s\n",pc->live_memsrc,strerror(errno));
+				} else {
+					pc->flags |= MFD_RDWR;
+				}
 		} else
 			error(FATAL, "unknown memory device: %s\n",
 				pc->live_memsrc);
diff --git kernel.c kernel.c
index b5d495e..a98c683 100644
--- kernel.c
+++ kernel.c
@@ -939,7 +939,7 @@ verify_version(void)
 	if (!read_string(linux_banner, buf, BUFSIZE-1))
 		error(WARNING, "cannot read linux_banner string\n");
 
-	if (ACTIVE()) {
+	if (ACTIVE() && !(IS_VOLATILE())) {
 		len = strlen(kt->proc_version);
 		if ((len > 0) && (strncmp(buf, kt->proc_version, len) != 0)) {
                		if (CRASHDEBUG(1)) {
diff --git main.c main.c
index b0524d2..c12d96c 100644
--- main.c
+++ main.c
@@ -59,6 +59,7 @@ static struct option long_options[] = {
         {"reloc", required_argument, 0, 0},
 	{"kaslr", required_argument, 0, 0},
 	{"active", 0, 0, 0},
+	{"volatile", 0, 0, 0},
 	{"minimal", 0, 0, 0},
 	{"mod", required_argument, 0, 0},
 	{"kvmhost", required_argument, 0, 0},
@@ -250,7 +251,8 @@ main(int argc, char **argv)
 				}
 				kt->flags |= RELOC_SET;
 			}
-
+			else if (STREQ(long_options[option_index].name, "volatile"))
+				pc->volflags |= VOLATILE_FLAG;
 			else if (STREQ(long_options[option_index].name, "minimal")) 
 				pc->flags |= MINIMAL_MODE;
 
@@ -590,7 +592,14 @@ main(int argc, char **argv)
                                 pc->readmem = read_s390_dumpfile;
                                 pc->writemem = write_s390_dumpfile;
 
-			} else if (is_sadump(argv[optind])) {
+                        } else if(IS_VOLATILE()) {
+                                pc->flags |= DEVMEM;
+                                pc->dumpfile = NULL;
+                                pc->readmem = read_dev_mem;
+                                pc->writemem = write_dev_mem;
+                                pc->live_memsrc = argv[optind];
+
+                        } else if (is_sadump(argv[optind])) {
 				if ((pc->flags & MEMORY_SOURCES) &&
 				    !sadump_is_diskset()) {
                                         error(INFO,
diff --git task.c task.c
index 75b1964..5ac961a 100644
--- task.c
+++ task.c
@@ -479,6 +479,8 @@ task_init(void)
 
 	if (ACTIVE()) {
 		active_pid = REMOTE() ? pc->server_pid : pc->program_pid; 
+		if(IS_VOLATILE())
+			active_pid = 0;
 		set_context(NO_TASK, active_pid);
 		tt->this_task = pid_to_task(active_pid);
 	}
